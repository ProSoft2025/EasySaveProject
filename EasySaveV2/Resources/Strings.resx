<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddExtension" xml:space="preserve">
    <value>AddExtension</value>
  </data>
  <data name="AddNewBackup" xml:space="preserve">
    <value>Add new backup</value>
  </data>
  <data name="AppTitle" xml:space="preserve">
    <value>EasySaveV2</value>
  </data>
  <data name="BackToHomePage" xml:space="preserve">
    <value>Back to home page</value>
  </data>
  <data name="BackupManagement" xml:space="preserve">
    <value>Backup management</value>
  </data>
  <data name="BackupProgress" xml:space="preserve">
    <value>Backup progress</value>
  </data>
  <data name="BackupType" xml:space="preserve">
    <value>Backup type</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>EasySave 2025 ALL rights reserved</value>
  </data>
  <data name="DarkMode" xml:space="preserve">
    <value>Dark mode</value>
  </data>
  <data name="Encryption" xml:space="preserve">
    <value>Encryption</value>
  </data>
  <data name="EncryptionExtensions" xml:space="preserve">
    <value>Extensions list to encrypt</value>
  </data>
  <data name="EnterBackupNumbers" xml:space="preserve">
    <value>Enter the number of backups to execute</value>
  </data>
  <data name="EnterExtensionPlaceholder" xml:space="preserve">
    <value>Enter extension (Ex: .txt)</value>
  </data>
  <data name="ExecuteBackup" xml:space="preserve">
    <value>Execute backup</value>
  </data>
  <data name="ExtensionErrorExists" xml:space="preserve">
    <value>This extension already exists</value>
  </data>
  <data name="ExtensionErrorDot" xml:space="preserve">
    <value>Extension must start with a dot (.)</value>
  </data>
  <data name="ExtensionErrorEmpty" xml:space="preserve">
    <value>Extension cannot be empty</value>
  </data>
  <data name="JobName" xml:space="preserve">
    <value>Job name</value>
  </data>
  <data name="JobProcess" xml:space="preserve">
    <value>Job process</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="OutputPlaceholder" xml:space="preserve">
    <value>Output will be shown here</value>
  </data>
  <data name="RemoveBackup" xml:space="preserve">
    <value>Remove backup</value>
  </data>
  <data name="RemoveExtention" xml:space="preserve">
    <value>Delete extension</value>
  </data>
  <data name="RestoreBackup" xml:space="preserve">
    <value>Restore backup</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveSettings" xml:space="preserve">
    <value>Save settings</value>
  </data>
  <data name="SelectDestinationFolder" xml:space="preserve">
    <value>Select destination folder</value>
  </data>
  <data name="SelectSourceFolder" xml:space="preserve">
    <value>Select source folder</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SourceDirectory" xml:space="preserve">
    <value>Source directory</value>
  </data>
  <data name="StartBackup" xml:space="preserve">
    <value>Start backup</value>
  </data>
  <data name="StartButton" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="StopBackup" xml:space="preserve">
    <value>Stop backup</value>
  </data>
  <data name="TargetDirectory" xml:space="preserve">
    <value>Target directory</value>
  </data>
  <data name="TotalBackupTime" xml:space="preserve">
    <value>Total backup time</value>
  </data>
  <data name="TotalDataBackedUp" xml:space="preserve">
    <value>Total data backed up</value>
  </data>
  <data name="VersionInfo" xml:space="preserve">
    <value>Version 2.0</value>
  </data>
  <data name="ViewBackup" xml:space="preserve">
    <value>View backup</value>
  </data>
  <data name="ViewLogs" xml:space="preserve">
    <value>View Logs</value>
  </data>
  <data name="ExtensionErrorNotFound" xml:space="preserve">
    <value>Extension not found</value>
  </data>
  <data name="BackupError" xml:space="preserve">
    <value>Backup error occured</value>
  </data>
  <data name="BackupCompleted" xml:space="preserve">
    <value>Backup completed successfully</value>
  </data>
  <data name="ExecuteBackup2" xml:space="preserve">
    <value>Execute backup</value>
  </data>
  <data name="EnterBackupNumbers2" xml:space="preserve">
    <value>Enter the backup numbers</value>
  </data>
  <data name="ProcessList" xml:space="preserve">
    <value>Process list</value>
  </data>
  <data name="EnterProcess" xml:space="preserve">
    <value>Enter a process (Ex: .exe)</value>
  </data>
  <data name="AddProcess" xml:space="preserve">
    <value>Add process</value>
  </data>
  <data name="DeleteProcess" xml:space="preserve">
    <value>Delete process</value>
  </data>
  <data name="TextBoxNotFound" xml:space="preserve">
    <value>Textbox not found</value>
  </data>
  <data name="ProcessInvalid" xml:space="preserve">
    <value>Invalid process</value>
  </data>
  <data name="ProcessExists" xml:space="preserve">
    <value>The process already exists</value>
  </data>
  <data name="RemoveBackupTitle" xml:space="preserve">
    <value>Remove a backup</value>
  </data>
  <data name="BackupName" xml:space="preserve">
    <value>Backup name</value>
  </data>
  <data name="BackupNameInvalid" xml:space="preserve">
    <value>Please enter a valid backup name</value>
  </data>
  <data name="BackupDeleted" xml:space="preserve">
    <value>Backup deleted successfully</value>
  </data>
  <data name="BackupNotFound" xml:space="preserve">
    <value>No backup found with the specified name</value>
  </data>
  <data name="BackupRestored" xml:space="preserve">
    <value>Backup restored successfully</value>
  </data>
  <data name="RestoreBackupTitle" xml:space="preserve">
    <value>Restore backup</value>
  </data>
</root>